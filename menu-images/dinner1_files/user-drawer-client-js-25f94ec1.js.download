import"./faceplate-switch-input-28aa6e16.js";import{_ as e,n as t,h as s,s as o,x as i}from"./icon-19348c80.js";import{bB as n,fe as a,$ as r,a0 as c,ff as d,bC as l,fg as h,fh as p,fi as y,fj as m}from"./shell-e562dec5.js";import{u}from"./community-colors-d50baad9.js";import{D as f}from"./display-theme-7e251d41.js";import"./checked-input-element-2d7d1dfc.js";import"./faceplate-input-23a10a98.js";import"./input-element-d66dab92.js";import"./form-common-utils-2b0cb095.js";import"./constants-998a49d3.js";let b=class extends o{constructor(){super(...arguments),this.enabled=!1,this.country=""}handler(e){e.preventDefault(),n({country:this.country,name:a,value:this.enabled?"false":"true"}),window.location.reload()}render(){return i`<div @click="${this.handler}" @keypress="${this.handler}">\n <slot></slot>\n </div>`}};e([t({type:Boolean})],b.prototype,"enabled",void 0),e([t({type:String})],b.prototype,"country",void 0),b=e([s("shreddit-modmode-setter")],b);let k=class extends o{constructor(){super(...arguments),this.enabled=!1,this.country="",this.cookieDomain="",this.sync=!1}async connectedCallback(){super.connectedCallback(),this.sync&&this.syncCookieToUserPreference()}async syncCookieToUserPreference(){try{const{data:e}=await r({operation:c.IdentityUserPreferences,variables:{includeNightMode:!0}}),t=e.identity?.preferences?.isNightModeEnabled;if(null==t)return;t!==this.enabled&&(this.enabled=t,this.updateClientStyles(),this.setCookie(),this.reportMismatch())}catch{}}setCookie(){n({country:this.country,name:d,value:this.enabled?f.Darkmode:f.Lightmode,options:{...l,domain:this.cookieDomain||void 0}})}async setUserPreference(){await r({operation:c.UpdateAccountPreferences,variables:{input:{isNightModeEnabled:this.enabled}}})}updateClientStyles(){u({isDarkMode:this.enabled});const e=this.querySelector("faceplate-switch-input");e&&(e.checked=this.enabled)}reportMismatch(){const e=h(this.country)&&!p(),t={cookies_enabled:navigator.cookieEnabled&&!e?"true":"false"};y({type:m.Counter,name:"shreddit_darkmode_preference_mismatches",value:1,labels:t})}async handler(e){e.preventDefault(),this.enabled=!this.enabled,this.updateClientStyles(),this.setCookie(),await this.setUserPreference()}handleKeypress(e){"Enter"!==e.key&&"Space"!==e.key||this.handler(e)}render(){return i`<div @click="${this.handler}" @keypress="${this.handleKeypress}">\n <community-colors></community-colors>\n <slot></slot>\n </div>`}};e([t({type:Boolean,reflect:!0})],k.prototype,"enabled",void 0),e([t({type:String})],k.prototype,"country",void 0),e([t({type:String,attribute:"cookie-domain"})],k.prototype,"cookieDomain",void 0),e([t({type:Boolean})],k.prototype,"sync",void 0),k=e([s("shreddit-darkmode-setter")],k);
//# sourceMappingURL=user-drawer-client-js-25f94ec1.js.map
